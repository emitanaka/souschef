---
format: gfm
---

<!-- README.md is generated from README.Rmd. Please edit that file -->

```{r, include = FALSE}
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>",
  fig.path = "man/figures/README-",
  out.width = "100%"
)
```

# souschef

<!-- badges: start -->
[![Lifecycle: experimental](https://img.shields.io/badge/lifecycle-experimental-orange.svg)](https://lifecycle.r-lib.org/articles/stages.html#experimental)
<!-- badges: end -->


This package is a **work-in-progress**! You need the [latest development version of edibble](https://github.com/emitanaka/edibble) for some functions to work. 

Currently the default is to use llama3.1:8b but in future, my plan is to use Open AI gpt models as the default. 

## Installation

You can install the development version of souschef as:

``` r
# install.packages("pak")
pak::pak("emitanaka/souschef")
```

## Example


```{r}
library(souschef)
```

Let's make up an experiment. Let's be lazy and choose a random named experiment with some made up context. 

```{r}
some_experiment <- takeauto()
some_experiment
```

Describe the context in words. The output here is just a simple direct translation from the given edibble object.

```{r}
describe_context(some_experiment)
```

We can expand the context more eloquently with a LLM. 

```{r}
describe_scenario(some_experiment)
```

We can ask our LLM assistant for ideas about the experimental design.

```{r}
ideate_design(some_experiment)
```

Or more broadly about ideas for the experiment.

```{r}
ideate_experiment(some_experiment)
```

Context-aware simulation 

```{r sim}
des <- design("Wheat yield experiment") |> 
    set_units(mainplot = 30,
              subplot = nested_in(mainplot, 4)) |>
    set_trts(fertilizer = LETTERS[1:3],
             irrigation = 2) |>
    allot_trts(fertilizer ~ mainplot,
               irrigation ~ subplot) |>
    assign_trts("random", seed = 719) |>
    serve_table() |>
    set_rcrds(biomass = mainplot,
              yield = subplot,
              quality_score = subplot)

autosim_rcrds(des)
```



